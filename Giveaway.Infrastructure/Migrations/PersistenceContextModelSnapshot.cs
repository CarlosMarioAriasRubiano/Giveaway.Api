// <auto-generated />
using System;
using Giveaway.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Giveaway.Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceContext))]
    partial class PersistenceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Giveaway.Domain.Entities.Award", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Award");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.AwardRange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AwardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EndRange")
                        .HasColumnType("int");

                    b.Property<int>("InitialRange")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AwardId")
                        .IsUnique();

                    b.ToTable("AwardRange");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.AwardRangeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssignedNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("AwardRangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AwardRangeId");

                    b.HasIndex("UserId");

                    b.ToTable("AwardRangeDetail");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("513038a6-4719-46fd-b762-dfa4436c82e5"),
                            Address = "Calle 46",
                            Identification = "123456",
                            Name = "Sistema POS"
                        },
                        new
                        {
                            Id = new Guid("4c6cdaae-4e12-4f18-afb1-58ed33513284"),
                            Address = "Carrera 15",
                            Identification = "654321",
                            Name = "Sistema ERP"
                        });
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.CustomerUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c791ff70-76bc-4bee-b331-2900580d765d"),
                            CustomerId = new Guid("513038a6-4719-46fd-b762-dfa4436c82e5"),
                            UserId = new Guid("2c5868b7-ea20-471d-9659-f562d6cde3ff")
                        },
                        new
                        {
                            Id = new Guid("2310e7f3-960e-47f3-8316-c60e3c78f785"),
                            CustomerId = new Guid("4c6cdaae-4e12-4f18-afb1-58ed33513284"),
                            UserId = new Guid("2c5868b7-ea20-471d-9659-f562d6cde3ff")
                        },
                        new
                        {
                            Id = new Guid("3a5b99ab-0489-4324-989e-a193e79a0c00"),
                            CustomerId = new Guid("4c6cdaae-4e12-4f18-afb1-58ed33513284"),
                            UserId = new Guid("5ae5a174-98cc-4ed5-9dca-39c8b8d2bc3c")
                        });
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c5868b7-ea20-471d-9659-f562d6cde3ff"),
                            Email = "",
                            Identification = "33333",
                            Name = "Carlos Mario Arias"
                        },
                        new
                        {
                            Id = new Guid("5ae5a174-98cc-4ed5-9dca-39c8b8d2bc3c"),
                            Email = "",
                            Identification = "55555",
                            Name = "Lina María González"
                        });
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.Award", b =>
                {
                    b.HasOne("Giveaway.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.AwardRange", b =>
                {
                    b.HasOne("Giveaway.Domain.Entities.Award", "Award")
                        .WithOne("AwardRange")
                        .HasForeignKey("Giveaway.Domain.Entities.AwardRange", "AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Award");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.AwardRangeDetail", b =>
                {
                    b.HasOne("Giveaway.Domain.Entities.AwardRange", "AwardRange")
                        .WithMany("AwardRangeDetails")
                        .HasForeignKey("AwardRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Giveaway.Domain.Entities.User", "User")
                        .WithMany("AwardRangeDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwardRange");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.CustomerUser", b =>
                {
                    b.HasOne("Giveaway.Domain.Entities.Customer", "Customer")
                        .WithMany("CustomersUsers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Giveaway.Domain.Entities.User", "User")
                        .WithMany("CustomersUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.Award", b =>
                {
                    b.Navigation("AwardRange")
                        .IsRequired();
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.AwardRange", b =>
                {
                    b.Navigation("AwardRangeDetails");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.Customer", b =>
                {
                    b.Navigation("CustomersUsers");
                });

            modelBuilder.Entity("Giveaway.Domain.Entities.User", b =>
                {
                    b.Navigation("AwardRangeDetails");

                    b.Navigation("CustomersUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
